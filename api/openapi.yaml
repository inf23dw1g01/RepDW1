openapi: 3.0.0
info:
  title: Filmes
  description: REST API from Group
  contact:
    name: Diogo Gon√ßalves
    email: a042244@umaia.pt
  version: 0.0.1
servers:
- url: http://localhost:8080
  description: My localhost
  variables:
    basePath:
      default: /
paths:
  /filmes:
    get:
      tags:
      - FilmesController
      summary: Retrieve Filmes
      operationId: retrieveFilmes
      responses:
        "200":
          description: Array of Filmes model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filme'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Filmes
                items:
                  $ref: '#/components/schemas/Filme'
      x-swagger-router-controller: FilmesController
    post:
      tags:
      - FilmesController
      summary: Create Filme
      operationId: createFilme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filme'
          application/xml:
            schema:
              $ref: '#/components/schemas/Filme'
      responses:
        "200":
          description: Create a Filme mmodel instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
            application/xml:
              schema:
                $ref: '#/components/schemas/Filme'
      x-swagger-router-controller: FilmesController
  /filmes/{id}:
    get:
      tags:
      - FilmesController
      summary: Retrieve filme
      operationId: retrieveFilme
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Filme id 1
            value: 1
          two:
            summary: Retrieve Filme id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
        "400":
          description: Bad Request
        "404":
          description: id not found
      x-swagger-router-controller: FilmesController
    put:
      tags:
      - FilmesController
      summary: Update Filme
      operationId: updateFilme
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Filme id 1
            value: 1
          two:
            summary: Update Filme id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filme'
            examples:
              AeroportoExample01:
                $ref: '#/components/examples/FilmeExample01'
              AeroportoExample02:
                $ref: '#/components/examples/FilmeExample02'
        required: true
      responses:
        "200":
          description: Sucess
          content:
            application/json:
              schema:
                description: Filme PUT sucess
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: FilmesController
    delete:
      tags:
      - FilmesController
      summary: Delete Filme
      operationId: deleteFilme
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Filme id 1
            value: 1
          two:
            summary: Delete Filme id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: FilmesController
  /Diretores:
    get:
      tags:
      - DiretoresController
      summary: Retrieve Diretor
      operationId: retrieveDiretores
      responses:
        "200":
          description: Array of Diretores model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Diretores'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Diretores
                items:
                  $ref: '#/components/schemas/Diretores'
      x-swagger-router-controller: DiretoresController
    post:
      tags:
      - DiretoresController
      summary: Create Diretor
      operationId: createDiretores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Diretores'
          application/xml:
            schema:
              $ref: '#/components/schemas/Diretores'
      responses:
        "200":
          description: Create a Diretores mmodel instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diretores'
            application/xml:
              schema:
                $ref: '#/components/schemas/Diretores'
      x-swagger-router-controller: DiretoresController
  /Diretores/{id}:
    get:
      tags:
      - DiretoresController
      summary: Retrieve Diretor
      operationId: retrieveDiretor
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Diretores id 1
            value: 1
          two:
            summary: Retrieve Diretores id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diretores'
        "400":
          description: Bad Request
        "404":
          description: id not found
      x-swagger-router-controller: DiretoresController
    put:
      tags:
      - DiretoresController
      summary: Update Diretor
      operationId: updateDiretores
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Diretores id 1
            value: 1
          two:
            summary: Update Diretores id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Diretores'
            examples:
              DiretoresExample01:
                $ref: '#/components/examples/DiretoresExample01'
              DiretoresExample02:
                $ref: '#/components/examples/DiretoresExample01'
        required: true
      responses:
        "200":
          description: Sucess
          content:
            application/json:
              schema:
                description: Diretores PUT sucess
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: DiretoresController
    delete:
      tags:
      - DiretoresController
      summary: Delete Diretor
      operationId: deleteDiretored
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Diretores id 1
            value: 1
          two:
            summary: Delete Diretores id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: DiretoresController
  /Atores:
    get:
      tags:
      - AtoresController
      summary: Retrieve Ator
      operationId: retrieveAtores
      responses:
        "200":
          description: Array of Ator model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atores'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Atores
                items:
                  $ref: '#/components/schemas/Atores'
      x-swagger-router-controller: AtoresController
    post:
      tags:
      - AtoresController
      summary: Create Ator
      operationId: createAtores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atores'
          application/xml:
            schema:
              $ref: '#/components/schemas/Atores'
      responses:
        "200":
          description: Create a Ator mmodel instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atores'
            application/xml:
              schema:
                $ref: '#/components/schemas/Atores'
      x-swagger-router-controller: AtoresController
  /Atores/{id}:
    get:
      tags:
      - AtoresController
      summary: Retrieve Ator
      operationId: retrieveAtor
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Ator id 1
            value: 1
          two:
            summary: Retrieve Ator id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atores'
        "400":
          description: Bad Request
        "404":
          description: id not found
      x-swagger-router-controller: AtoresController
    put:
      tags:
      - AtoresController
      summary: Update Ator
      operationId: updateAtores
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Atores id 1
            value: 1
          two:
            summary: Update Atores id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atores'
            examples:
              AtoresExample01:
                $ref: '#/components/examples/AtoresExample01'
              AtoresExample02:
                $ref: '#/components/examples/AtoresExample01'
        required: true
      responses:
        "200":
          description: Sucess
          content:
            application/json:
              schema:
                description: Atores PUT sucess
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: AtoresController
    delete:
      tags:
      - AtoresController
      summary: Delete Ator
      operationId: deleteAtores
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Ator id 1
            value: 1
          two:
            summary: Delete Ator id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: AtoresController
  /Personagens:
    get:
      tags:
      - PersonagensController
      summary: Retrieve Personagem
      operationId: retrievePersonagens
      responses:
        "200":
          description: Array of Personagens model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personagens'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Personagens
                items:
                  $ref: '#/components/schemas/Personagens'
      x-swagger-router-controller: PersonagensController
    post:
      tags:
      - PersonagensController
      summary: Create Personagem
      operationId: createPersonagens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Personagens'
          application/xml:
            schema:
              $ref: '#/components/schemas/Personagens'
      responses:
        "200":
          description: Create a Personagem mmodel instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personagens'
            application/xml:
              schema:
                $ref: '#/components/schemas/Personagens'
      x-swagger-router-controller: PersonagensController
  /Personagens/{id}:
    get:
      tags:
      - PersonagensController
      summary: Retrieve Personagem
      operationId: retrievePersonagem
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Personagem id 1
            value: 1
          two:
            summary: Retrieve Personagem id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personagens'
        "400":
          description: Bad Request
        "404":
          description: id not found
      x-swagger-router-controller: PersonagensController
    put:
      tags:
      - PersonagensController
      summary: Update Personagem
      operationId: updatePersonagens
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Personagens id 1
            value: 1
          two:
            summary: Update Personagens id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Personagens'
            examples:
              PersonagensExample01:
                $ref: '#/components/examples/PersonagensExample01'
              PersonagensExample02:
                $ref: '#/components/examples/PersonagensExample01'
        required: true
      responses:
        "200":
          description: Sucess
          content:
            application/json:
              schema:
                description: Personagens PUT sucess
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: PersonagensController
    delete:
      tags:
      - PersonagensController
      summary: Delete Ator
      operationId: deletePersonagens
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Personagem id 1
            value: 1
          two:
            summary: Delete Personagem id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: PersonagensController
components:
  schemas:
    Filme:
      title: Filme
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        ano:
          type: string
      additionalProperties: false
      example:
        ano: "2005"
        name: Star Wars:Revenge Of The Sith
        description: "Plot. Orbiting above Coruscant, Obi-Wan Kenobi and Anakin Skywalker\
          \ lead a mission to rescue Supreme Chancellor Palpatine from the cyborg\
          \ Separatist commander General Grievous. After infiltrating Grievous' flagship,\
          \ Obi-Wan and Anakin battle the Sith Lord Count Dooku, whom Anakin decapitates."
        id: 0
    Diretores:
      title: Diretores
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        date_of_birth:
          type: string
      additionalProperties: false
      example:
        id: 1
        name: Quentin Tarantino
        date_of_birth: "1963"
    Atores:
      title: Atores
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        date_of_birth:
          type: string
      additionalProperties: false
      example:
        id: 1
        name: Paul Walker
        date_of_birth: "1973"
    Personagens:
      title: Personagens
      required:
      - name
      - role
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        role:
          type: string
      additionalProperties: false
      example:
        id: 1
        name: Paul Walker
        role: Leading Actor
  examples:
    FilmeExample01:
      value:
        id: 1
        name: Cars
        description: "The film follows a selfish and arrogant young racecar named\
          \ Lightning McQueen who, on the way to the biggest race of his life, becomes\
          \ stranded in a forgotten town called Radiator Springs, where he learns\
          \ to be humbler and more respectful towards others."
    FilmeExample02:
      value:
        id: 2
        name: The Hunger Games
        description: Katniss Everdeen voluntarily takes her younger sister's place
          in the Hunger Games:a televised competition in which two teenagers from
          each of the twelve Districts of Panem are chosen at random to fight to the
          death.
    DiretoresExample01:
      value:
        id: 1
        name: George Lucas
        description: "George Walton Lucas Jr. √© um produtor cinematogr√°fico, filantropista,\
          \ roteirista e diretor de cinema americano. Mundialmente famoso como criador\
          \ das franquias Star Wars e Indiana Jones, Lucas est√° entre as pessoas mais\
          \ ricas e influentes do mundo, com fortuna estimada em 5 bilh√µes de d√≥lares."
    DiretoresExample02:
      value:
        id: 2
        name: Joe Russo
        description: "Joseph Vincent Russo is an American filmmaker and producer who\
          \ works alongside his brother Anthony Russo. They have directed You, Me\
          \ and Dupree, Cherry and the Marvel films Captain America:The Winter Soldier,\
          \ Captain America:Civil War, Avengers:Infinity War and Avengers:Endgame."
    AtoresExample01:
      value:
        id: 1
        name: Paul Walker
        date_of_birth: 12-09-1973
    AtoresExample02:
      value:
        id: 1
        name: Vin Diesel
        date_of_birth: 12-09-1964
    PersonagensExample01:
      value:
        id: 1
        name: Ot√°vio
        role: Film Director
    PersonagensExample02:
      value:
        id: 1
        name: Gon√ßalo
        role: Film Editor
